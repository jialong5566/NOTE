体现：
	1、父类类型的引用  指向子类的对象
	2、该引用只能调用父类中的属性和方法
	3、方法有重写，调用重写的方法。
	   属性调用父类的。
	4、向上自动转型
	   向下强制转型  有继承关系才能造型，否则会报错
		if(child instanceof Father)//亲子鉴定 对象属于类

引用类型代表身份，限制了能调用的属性和方法。属性是死的，方法是活的，方法找自己到原型上最近的。

同名方法
调用一个方法，名字一样，参数不同
1、利用方法重载----静态加载
2、利用多态效果----动态加载

策略模式----行为型
流程固定，由于不同策略导致执行结果不同
==============================================================
内部类
将一个类定义在另一个类的内部
1、成员内部类
	可以省一.java文件，OutClass$InnerClass.java
	可以访问其他成员，包括私有
	若想访问外部类属性，外部类.this.属性


创建对象用法
	import package.OutClass.InnerClass
	...
	OutClass oc = new OutClass();//先创建对象
	InnerClass ic = oc.new InnerClass();//对象点new,不导包则 OutClass.InnerClass


2、局部内部类	定义在方法或块内，
		不能用public protected private static 修饰
		命名规则 OutClass$1InnerClass 同名内部类数字加一，顺延
		局部内部类使用的变量只能用 final修饰，因为字节码已经编译好了。


3、匿名内部类（成员匿名内部类，局部匿名内部类）
	Interface inter = new Interface(){ //将接口中的规则具体化 }

4、静态内部类（成员静态内部类）
	static class InnerClass{}
	不能访问非静态成员
