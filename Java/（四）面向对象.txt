.java文件-->.class-->通过类加载器 ClassLoader———>存储区中的方法区里，类的映射形成类模板
new 在堆内存中开辟空间，形成对象。
栈内存中开辟变量，指向堆内存中的空间地址。

属性声明
public final String prop="属性"；
方法声明
public static void int getAge(String name) throws Exception { return this.age;}

返回值悲观性原则

传参问题
形参为基本类型，形参改，实参不变
形参为引用类型，形参改，实参也改
=============================================================
命名规约
字母区分大小写，数字不能开头，符号_ $ ,不建议使用中文
类用大驼峰式，属性方法变量用小驼峰式，静态常量全大写，_连接，包名全小写

冒泡排序
for(int i=0;i<arr.length-1;i++){
    for(int j=0;j<arr.length-1-i;j++){
	if(arr[j]<arr[j+1]){
	    exchange(arr[j],arr[j+1]);
	}
    }
}
=============================================================
方法重载
一个类中一组方法，相同方法名字，不同的参数列表（参数的个数，类型，顺序）
通过方法名字定位方法，参数类型找不到一致的，找可以转换的参数类型(基本对基本，引用对引用)

动态参数列表，int...x ==>  int[] x 或 空(空的情况，优先找无参数方法)
不能与相同意义的数组类型方法构成重载，会报错
可以放在参数列表的末尾，若放，必须是末尾
=======================================================================
构造方法
返回值类型就是类，省略不写，方法名字与类名字一致
new 关键字进行调用
构造方法默认存在，无参数的构造方法，显式定义了会覆盖掉默认的
可以重载，默认的一起写出来，否则报错

块 在构造方法之前执行，允许有多个

this 代表当前创建的对象
调用属性和方法
调用构造方法 this();必须在另一个构造方法的第一行
构造方法不能来回调用；

方法来回调用会导致栈溢出错误，计算机处理不了的结果
